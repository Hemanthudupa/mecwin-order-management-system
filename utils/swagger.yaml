openapi: "3.0.0"
info:
  title: " MECWIN-ORDER-MANAGEMENT"
  version: "1.0.0"
  description: "This project is for Mecwin Technologies company , for the managing and automating the internal process of work"

servers:
  - url: "http://localhost:5090"

paths:
  /login:
    post:
      summary: User login
      description: Authenticates a user based on email or phone number and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: "User's email address (optional if phone number is provided)"
                phoneNumber:
                  type: string
                  description: "User's phone number (optional if email is provided)"
                password:
                  type: string
                  description: "User's password"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for authenticated user
                  userRole:
                    type: string
                    description: "Role of the authenticated user (e.g., admin, user)"
        "400":
          description: "Invalid inputs: either email or phone number is required"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "either phone number or email are required"
                  code:
                    type: string
                    example: "INVALID INPUTS"
        "404":
          description: "User not found"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "user does not exist"
                  code:
                    type: string
                    example: "USER DOESNOT EXIST"
        "401":
          description: "Invalid password"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "invalid password"
                  code:
                    type: string
                    example: "INVALID PASSWORD"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred"
